continue
@user_info
continue
params
exit
params
continue
params["direction"]
params
exit
params
note
continue
@all_notes.includes("taggings").where("taggings.id is null"
note = @all_notes.select { |n| n.tags == [] }
continue
note = @all_notes.select { |n| n.tags == [] }
@all_notes[7].tags
@all_notes[7].tag
@all_notes[7]
@all_notes[0]
@all_notes
continue
@all_notes[0].tag_counts
@all_notes[0].tags_on
@all_notes[0].taggings
@all_notes[0].tags
@all_notes[0].tag
@all_notes[0]
@all_notes
continue
@all_notes[0].tag_list
@all_notes[0].tags
@all_notes[0]
@all_notes
note = @all_notes.map { |n| p n.tags }
note = @all_notes.map { |n| n.tags != [] }
note = @all_notes.select { |n| n.tags != [] }
note = @all_notes.select { |n| n.tags == [] }
note = @all_notes.reject { |n| n.tags = [] }
note
note = @all_notes.select { |n| n.tags = [] }
note
note = @all_notes.map { |n| n.tags = [] }
@all_notes.map { |n| n.tags = [] }
@all_notes.map { |n| n.tags[0] = [] }
@all_notes.where("tags is null")
@all_notes.where("tag.id is null")
@all_notes.where("tag is null")
@all_notes.includes("taggings").where("tag is null")
@all_notes.includes("taggings").where("tag.id is null")
@all_notes.first.tags
@all_notes.last.tags
@all_notes.includes("taggings").where("taggings.id is null")
@all_notes.includes("taggings")
@all_notes.tagged_with('')
@all_notes.tagged_with('d')
@all_notes.tagged_with(nil)
@all_notes.tagged_with(null)
@all_notes.tags_list
@all_notes.tag_list
@all_notes.tags
@all_notes.taggings
@all_notes
note = Note.includes("taggings")
note = Note.where("tag.id")
note = Note.where("tag.id)
note[0]
note[]
note = Note.where("tag.id is null")
note
note = Note.includes("taggings").where("taggings.id is null")
Note.includes("taggings").where("taggings.id is null")
Notes.includes("taggings").where("taggings.id is null")
@all_notes.includes("taggings").where("taggings.id is null")
@all_notes.includes("taggings")
@all_notes.last.tags[0]
@all_notes.last.tags[]
@all_notes.last.tags
@all_notes[0].tags
@all_notes[0].tag_list
@all_notes[0]
note.body
note
note = @all_notes.where(:tags => nil)
@all_notes.where(:tags => nil)[0]
@all_notes.where(:tags => nil)
@all_notes.where(:tags => null)
@all_notes.last.tags
@all_notes.last
@all_notes[0].tags
@all_notes[0]
@all_notes
continue
@notes[4].showing_order
@notes[3].showing_order
@notes[2].showing_order
@notes[1].showing_order
@notes[0].showing_order
@notes[0]
@notes
continue
gflash
value
next
options
next
flash_now
next
options
args
next
step
continue
next
step
exit
next
step
next
continue
previous
back
hi = gflash
hi = gflash {success: "hellllo", time: 2000}
hi = gflash success: "hellllo"
hello
continue
note.taggings
note.taggings[0]
note.taggings[0].delete
note.taggings[0]
note.taggings
note.taggings.delete
note.taggings
note.all_tag_list
note.tag_list
note
continue
note.tags_from(@user_info).remove('this-is-the-end')
notenote.tags_from(@user_info).remove('this-is-the-end')
note
exit
p "hello" if !@tomorrow_dates[0]
p "hello" if @tomorrow_dates[0]
p "hello" if !@tomorrow_dates
p "hello" if @tomorrow_dates
if @tomorrow_dates
@tomorrow_dates
exit
@dates.where(:date_show => Date.today)
@dates.where(:date_show => Date.tomorrow)
@dates
exit
!(@user_info.dates_dismissed == Date.today)
!@user_info.dates_dismissed == Date.today
@user_info.dates_dismissed == Date.today
@user_info.dates_dismissed
@user_info.new_user
@user_info
exit
@all_tags_names = @all_tags.map{ |t| t.name }
@all_tags
exit
tags
tags = @all_tags.sort_by {|t| t.name }
@all_tags.first.name
@all_tags.first
@all_tags
exit
ecit
note
continue
@user_info.tag(@note, :with => tag_params, :on => :tags)
tag_params
continue
@user_info.tag(@note, :with => tag_params, :on => :tags)
@user_info
tag_params
@note
continue
session[:userinfo]['extras']['identities']
session[:userinfo]['identities']
session[:userinfo]['extras']
session[:userinfo]['info']
session[:userinfo]
session
continue
@note.taggings.each { |tag| tag.update_attributes(:tagger_id => current_user) }
session[:userinfo]['extra']['raw_info']['identities'][0]['user_id']
session[:userinfo]['extra']['raw_info']['identities'][0]
session[:userinfo]['extra']['raw_info']['identities'][:user_id]
session[:userinfo]['extra']['raw_info']['identities']['provider']
session[:userinfo]['extra']['raw_info']['identities']
session[:userinfo]['extra']['raw_info']['identities']['user_id']
session[:userinfo]['extra']['raw_info']['user_id']
session[:userinfo]['extra']['user_id']
session[:userinfo]['extra']
session[:userinfo]['info']
pp session[:userinfo].inspect
session[:userinfo].inspect
pp session[:userinfo]
print session[:userinfo]
session[:userinfo]['extra']['identities']
session[:userinfo]['identities']
session[:userinfo]
@note.taggings.each { |tag| tag.update_attributes(:tagger_id => current_user) }
@note.taggings.each do |tag|
@note.taggings.each |tag|
current_user
@note.save
current_user
@note.taggings.first
@note.taggings
continue
@note.taggings.first.update_attributes(:tagger_id => current_user)
@note.taggings
@note.taggings.update_attributes(:tagger_id => current_user)
@note.taggings.tagger_id
@note.taggings
@note
@note.save
@note.sace
@note.tags
@note.taggings.tagger_id = current_user
@note.taggings.tagger_id
@note.taggings
@note.taggin
@note
continue
@taggings = ActsAsTaggableOn::Tagging.all
continue
tagging_list = @taggings.taggable
@taggings.first.taggable
@taggings.first.note
@taggings.first.tag.taggable_id
@taggings.first.tag.Note
@taggings.first.tag.taggable
@taggings.first.tag.note
@taggings.first.tag
@taggings.first
@taggings = ActsAsTaggableOn::Tagging.all
@tags.first.note
@tags.first
@tags = ActsAsTaggableOn::Tag.all
@tags
continue
user_info.first.user_id
user_info.first
user_info.user_id
user_info
continue
add_user_info
empty_database?
session[:userinfo]
continue
